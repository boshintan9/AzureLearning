{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": { // TODO: Add in defaults for everything that I can. Sort Alphabetically
        "internetNatNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "The first part of the name for the NAT gateway resource providing internet to the training VM"
            }
        },
        "natIPAddressNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "The first part of the name for the public IP address for the internet NAT gateway."
            }
        },
        "natIPAddressPrefixNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "The first part of the name for the internet NAT public IP address prefixes resource."
            }
        },
        "bastionHostNamePrefix": {
            "type": "string"
        },
        "bastionHostSubnetName": {
            "type": "string",
            "defaultValue": "AzureBastionSubnet"
        },
        "bastionPublicIpAddressNamePrefix": {
            "type": "string"
        },
        "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]"
        },
        "networkInterfacePrefix": {
            "type": "string",
            "defaultValue": "windows-int-"
        },
        "hostSubnetName": {
            "type": "string"
        },
        "virtualMachineNamePrefix": {
            "type": "string",
            "defaultValue": "windows-analysis-vm-"
        },
        "virtualMachineComputerName": {
            "type": "string"
        },
        "storagePrefix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 11,
            "defaultValue": "storage"
        },
        "virtualMachineRG": {
            "type": "string"
        },
        "osDiskType": {
            "type": "string"
        },
        "virtualMachineSize": {
            "type": "string"
        },
        "adminUsername": {
            "type": "string"
        },
        "adminPasswordPrefix": {
            "type": "secureString",
            "minLength": 8,
            "defaultValue": "Training ",
            "metadata": {
                "description": "Administrator password for the machine. Auto generated and printed after deployment."
            }
        },
        "patchMode": {
            "type": "string"
        },
        "utcText": {
            "type": "string",
            "defaultValue": "[utcNow('yyMMdd')]",
            "metadata": {
                "description": "This parameter's default value is a 6 character YearMonthDay number, e.g. 210110 . This number is used to complete the names of most resources throughout the template."
            }
        },
        "virtualNetworkPrefix": {
            "type": "String"
        },
        "bastionNSGName": {
            "type": "string",
            "defaultValue": "bastion-access"
        },
        "net-sku": {
            "type": "string"
        },
        "net-zones": {
            "type": "array"
        }
    },
    "variables": { // TODO: Sort alphabetically
        "internetNatName": "[concat(parameters('internetNatNamePrefix'), parameters('utcText'))]",
        "natIPAddressName": "[concat(parameters('natIPAddressNamePrefix'), parameters('utcText'))]",
        "natIPAddressPrefixName": "[concat(parameters('natIPAddressPrefixNamePrefix'), parameters('utcText'))]",
        "bastionPublicIpAddressName": "[concat(parameters('bastionPublicIpAddressNamePrefix'), parameters('utcText'))]",
        "bastionHostName": "[concat(parameters('bastionHostNamePrefix'), parameters('utcText'))]",
        "vnetName": "[concat(parameters('virtualNetworkPrefix'), parameters('utcText'))]",
        "storageAccountName": "[concat(parameters('storagePrefix'), uniqueString(resourceGroup().id))]",
        "networkInterfaceName": "[concat(parameters('networkInterfacePrefix'), parameters('utcText'))]",
        "virtualMachineName": "[concat(parameters('virtualMachineNamePrefix'), parameters('utcText'))]",
        "adminPassword": "[concat(parameters('adminPasswordPrefix'), uniqueString(resourceGroup().id, deployment().name))]"
    },
    "resources": [ // TODO: Add in tags for all resources
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('bastionNSGName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2020-05-01",
            "properties": {
                "securityRules": [
                    {
                        "name": "Bastion_In",
                        "properties": {
                            "description": "Allows bastion host access into VM",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "10.1.254.0/24",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [
                                "22",
                                "3389"
                            ],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[variables('bastionPublicIpAddressName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2019-02-01",
            "sku": {
                "name": "[parameters('net-sku')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "tags": {}
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[variables('natIPAddressName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2019-02-01",
            "sku": {
                "name": "[parameters('net-sku')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/publicipprefixes",
            "name": "[variables('natIPAddressPrefixName')]",
            "apiVersion": "2019-09-01",
            "location": "[parameters('location')]",
            "zones": "[parameters('net-zones')]",
            "sku": {
                "name": "[parameters('net-sku')]"
            },
            "properties": {
                "prefixLength": 30
            }
        },
        {
            "type": "Microsoft.Network/natGateways",
            "name": "[variables('internetNATName')]",
            "apiVersion": "2019-09-01",
            "location": "[parameters('location')]",
            "tags": {},
            "sku": {
                "name": "[parameters('net-sku')]"
            },
            "zones": "[parameters('net-zones')]",
            "properties": {
                "publicIPAddresses": [
                    {
                        "id": "[resourceId('Microsoft.Network/publicIpAddresses/', variables('natIPAddressName'))]"
                    }
                ],
                "publicIPPrefixes": [
                    {
                        "id": "[resourceId('Microsoft.Network/publicipprefixes/', variables('natIPAddressPrefixName'))]"
                    }
                ],
                "idleTimeoutInMinutes": 4
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses/', variables('natIPAddressName'))]",
                "[resourceId('Microsoft.Network/publicipprefixes/', variables('natIPAddressPrefixName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "name": "[variables('bastionHostName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2018-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses', variables('bastionPublicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('bastionHostSubnetName'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('bastionPublicIpAddressName'))]"
                            }
                        }
                    }
                ]
            },
            "tags": {}
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnetName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2020-05-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('bastionNSGName'))]",
                "[resourceId('Microsoft.Network/natGateways/', variables('internetNatName'))]"
            ],
            "tags": {
                "training": "network"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('bastionHostSubnetName')]", // This name should alway be "AzureBastionSubnet" - Bastions expect it
                        "properties": {
                            "addressPrefix": "10.1.254.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "[parameters('hostSubnetName')]",
                        "properties": {
                            "addressPrefix": "10.1.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('bastionNSGName'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                },
                                {
                                    "service": "Microsoft.Storage",
                                    "locations": [
                                        "[parameters('location')]"
                                    ]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "natGateway": {
                                "id": "[resourceId('Microsoft.Network/natGateways/', variables('internetNatName'))]"
                            }
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('networkInterfaceName')]",
            "apiVersion": "2018-10-01",
            "location": "[parameters('location')]",
            "dependsOn": [
              "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"  
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), parameters('hostSubnetName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            },
            "tags": {
                "training": "analyst-host"
            }
        },
        {
            "name": "[variables('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "MicrosoftWindowsDesktop",
                        "offer": "Windows-10",
                        "sku": "20h1-pro-g2",
                        "version": "latest"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1023,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineComputerName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "patchMode": "[parameters('patchMode')]"
                        }
                    }
                },
                "licenseType": "Windows_Client",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            },
            "tags": {
                "training": "analyst-host"
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "generatedPassword": {
            "type": "string",
            "value": "[variables('adminPassword')]"
        }
    }
}